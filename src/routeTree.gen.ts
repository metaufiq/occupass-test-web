/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OrderIndexImport } from './routes/order/index'
import { Route as CustomerIndexImport } from './routes/customer/index'
import { Route as OrderDetailImport } from './routes/order/detail'
import { Route as CustomerIdImport } from './routes/customer/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrderIndexRoute = OrderIndexImport.update({
  id: '/order/',
  path: '/order/',
  getParentRoute: () => rootRoute,
} as any)

const CustomerIndexRoute = CustomerIndexImport.update({
  id: '/customer/',
  path: '/customer/',
  getParentRoute: () => rootRoute,
} as any)

const OrderDetailRoute = OrderDetailImport.update({
  id: '/order/detail',
  path: '/order/detail',
  getParentRoute: () => rootRoute,
} as any)

const CustomerIdRoute = CustomerIdImport.update({
  id: '/customer/$id',
  path: '/customer/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/customer/$id': {
      id: '/customer/$id'
      path: '/customer/$id'
      fullPath: '/customer/$id'
      preLoaderRoute: typeof CustomerIdImport
      parentRoute: typeof rootRoute
    }
    '/order/detail': {
      id: '/order/detail'
      path: '/order/detail'
      fullPath: '/order/detail'
      preLoaderRoute: typeof OrderDetailImport
      parentRoute: typeof rootRoute
    }
    '/customer/': {
      id: '/customer/'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerIndexImport
      parentRoute: typeof rootRoute
    }
    '/order/': {
      id: '/order/'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/customer/$id': typeof CustomerIdRoute
  '/order/detail': typeof OrderDetailRoute
  '/customer': typeof CustomerIndexRoute
  '/order': typeof OrderIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/customer/$id': typeof CustomerIdRoute
  '/order/detail': typeof OrderDetailRoute
  '/customer': typeof CustomerIndexRoute
  '/order': typeof OrderIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/customer/$id': typeof CustomerIdRoute
  '/order/detail': typeof OrderDetailRoute
  '/customer/': typeof CustomerIndexRoute
  '/order/': typeof OrderIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/customer/$id' | '/order/detail' | '/customer' | '/order'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/customer/$id' | '/order/detail' | '/customer' | '/order'
  id:
    | '__root__'
    | '/'
    | '/customer/$id'
    | '/order/detail'
    | '/customer/'
    | '/order/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CustomerIdRoute: typeof CustomerIdRoute
  OrderDetailRoute: typeof OrderDetailRoute
  CustomerIndexRoute: typeof CustomerIndexRoute
  OrderIndexRoute: typeof OrderIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CustomerIdRoute: CustomerIdRoute,
  OrderDetailRoute: OrderDetailRoute,
  CustomerIndexRoute: CustomerIndexRoute,
  OrderIndexRoute: OrderIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/customer/$id",
        "/order/detail",
        "/customer/",
        "/order/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/customer/$id": {
      "filePath": "customer/$id.tsx"
    },
    "/order/detail": {
      "filePath": "order/detail.tsx"
    },
    "/customer/": {
      "filePath": "customer/index.tsx"
    },
    "/order/": {
      "filePath": "order/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
